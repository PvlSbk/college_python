# Задание №7 от 20.03.24 по Python
#
# 1) Дан список чисел. Если в нем есть два соседних элемента одного знака, выведите эти числа.
# Если соседних элементов одного знака нет — не выводите ничего.
# Если таких пар соседей несколько — выведите первую пару.
# пример входных данных: -1 2 3 -1 -2
# пример выходных данных: 2 3

inpt = input('Введите ряд чисел через пробел: ')
a = inpt.split()
for i in range(len(a) - 1):
    if int(a[i]) > 0 and int(a[i + 1]) > 0 or int(a[i]) < 0 and int(a[i + 1]) < 0:
        print(a[i], a[i + 1])
        break

# 2) Дан список чисел. Определите, сколько в этом списке элементов,
# которые больше двух своих соседей, и выведите количество таких элементов.
# Крайние элементы списка никогда не учитываются, поскольку у них недостаточно соседей.
# пример входных данных: 1 5 1 5 1
# пример выходных данных: 2

s = input('Введите ряд чисел через пробел: ')
a1 = s.split()  # создаем список
a = []  # преобразуем список в формат int (влияет на результат, если числа в списке имеют более одного знака)
for i in range(len(a1)):
    z = int(a1[i])
    a.append(z)
count = 0
for i in range(1, len(a)-1):
    if a[i - 1] < a[i] > a[i + 1]:
        count += 1
print(count)

# 3) Дан список чисел. Выведите значение наибольшего элемента в списке,
# а затем индекс этого элемента в списке.
# Если наибольших элементов несколько, выведите индекс первого из них.
# пример входных данных: 1 2 3 2 1
# пример выходных данных: 3 2

s = input('введите ряд чисел через пробел: ')
a1 = s.split()  # создаем список
a = []  # преобразуем значения списка в формат int
for i in range(len(a1)):
    z = int(a1[i])
    a.append(z)
for i in range(len(a)):
    if a[i] == max(a):
        print(max(a), i)
        break

# 4) Петя перешёл в другую школу. На уроке физкультуры ему понадобилось определить своё место в строю.
# Помогите ему это сделать.
# Программа получает на вход невозрастающую последовательность натуральных чисел,
# означающих рост каждого человека в строю. После этого вводится число X – рост Пети.
# Все числа во входных данных натуральные и не превышают 200.
# Выведите номер, под которым Петя должен встать в строй.
# Если в строю есть люди с одинаковым ростом, таким же, как у Пети, то он должен встать после них.
# пример входных данных:
# 165 163 160 160 157 157 155 154
# 162
# пример выходных данных: 3

s = input('введите последовательность значений роста каждого человека в строю через пробел: ')
b = s.split()
b.sort(reverse=True)  # считаем, что рост не может быть меньше 100см, иначе нужно перевести весь ряд в int
x = int(input('Введите рост Пети, Х, см: '))

for i in range(len(b)):
    if int(b[i]) < x:
        print(i + 1)  # Считаем, что нумерация начинается с 1
        break

# 5) Дан список, упорядоченный по неубыванию элементов в нем. Определите, сколько в нем различных элементов.
# пример входных данных: 1 2 2 3 3 3
# пример выходных данных: 3

s = input('введите последовательность значений, упорядоченных по неубыванию, через пробел: ')
b = s.split()
count = 1
for i in range(len(b) - 1):
    if int(b[i+1]) > int(b[i]):
        count += 1
print(count)

# 6) Переставьте соседние элементы списка (A[0] c A[1], A[2] c A[3] и т. д.).
# Если элементов нечетное число, то последний элемент остается на своем месте.
# пример входных данных: 1 2 3 4 5
# пример выходных данных: 2 1 4 3 5

s = input('введите последовательность значений списка через пробел: ')
b1 = s.split()
b2 = []
for i in range(0, len(b1)-1, 2):
    b2.append(b1[i + 1])
    b2.append(b1[i])
if len(b1) % 2 == 1:
    b2.append(b1[-1])
print(*b2, sep=' ')

# 7) В списке все элементы различны. Поменяйте местами минимальный и максимальный элемент этого списка.
# пример входных данных: 3 4 5 2 1
# пример выходных данных: 3 4 1 2 5

s = input('введите последовательность значений списка через пробел: ')
b = s.split()
b1 = []  # преобразуем значения списка в формат int
for i in range(len(b)):
    z = int(b[i])
    b1.append(z)
b2 = []
max_b = max(b1)
min_b = min(b1)
for i in range(len(b1)):
    if int(b1[i]) == max_b:
        b2.append(min_b)
    elif int(b1[i]) == min_b:
        b2.append(max_b)
    else:
        b2.append(b1[i])
print(*b2, sep=' ')

# 8) Дан список из чисел и индекс элемента в списке k. Удалите из списка элемент с индексом k,
# сдвинув влево все элементы, стоящие правее элемента с индексом k.
# Программа получает на вход список, затем число k.
# Программа сдвигает все элементы, а после этого удаляет последний элемент списка при помощи метода pop() без параметров.
# Программа должна осуществлять сдвиг непосредственно в списке, а не делать это при выводе элементов.
# Также нельзя использовать дополнительный список. Также не следует использовать метод pop(k) с параметром.
# пример входных данных:
# 7 6 5 4 3 2 1
# 2
# пример выходных данных: 7 6 4 3 2 1

s = input('введите последовательность значений списка через пробел: ')
b = s.split()
k = int(input('введите индекс удаляемого элемента в списке: '))
for i in range(k, len(b) - 1):
    b[i] = b[i + 1]
b.pop()
print(*b, sep=' ')

# 9) Дан список целых чисел, число k и значение C.
# Необходимо вставить в список на позицию с индексом k элемент, равный C,
# сдвинув все элементы, имевшие индекс не менее k, вправо.
# Поскольку при этом количество элементов в списке увеличивается,
# после считывания списка в его конец нужно будет добавить новый элемент, используя метод append.
# Вставку необходимо осуществлять уже в считанном списке, не делая этого при выводе и не создавая дополнительного списка.
# пример входных данных:
# 7 6 5 4 3 2 1
# 2 0
# пример выходных данных: 7 6 0 5 4 3 2 1

s = input('введите последовательность значений списка через пробел: ')
b = s.split()
kc = input('введите индекс k и значение С через пробел: ')
bkc = kc.split()
k = int(bkc[0])
c = bkc[1]
b.append(b[-1])
for i in range(len(b) - 1, k, -1):
    b[i] = b[i - 1]
b[k] = c
print(*b, sep=' ')

# 10) Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу.
# Считается, что любые два элемента, равные друг другу образуют одну пару, которую необходимо посчитать.
# пример входных данных: 1 2 3 2 3
# пример выходных данных: 2

s = input('введите последовательность значений списка через пробел: ')
b = s.split()
b1 = []  # преобразуем значения списка в формат int
count = 0
for i in range(len(b)):
    z = int(b[i])
    b1.append(z)
for i in range(len(b1)):
    for j in range(i + 1, len(b1)):
        if b1[i] == b1[j]:
            count += 1
print(count)